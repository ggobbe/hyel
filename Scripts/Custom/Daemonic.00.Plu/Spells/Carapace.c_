using System; 
using Server.Targeting; 
using Server.Network; 
using Server.Misc; 
using Server.Items; 
using System.Collections;
using Server.Mobiles;
namespace Server.Spells.Necromancy2 
{ 
   public class Carapace : Necro2Spell 
   { 
      private static SpellInfo m_Info = new SpellInfo( 
            "Carapace", "Hot'N Shass", 
            SpellCircle.Sixth, 
            -1, 
            9002, 
            false, 
				Reagent.Onax,
				Reagent.BatWing,
				Reagent.MandrakeRoot
         ); 

     
	    public override double CastDelay{ get{ return 0.0; } }
		//public override int RequiredTithing{ get{ return 25; } }
		public override double RequiredSkill{ get{ return 125.0; } }
		public override int RequiredMana{ get{ return 50; } }
		public override bool BlocksMovement{ get{ return false; } }	


	public static void Initialize()
				
		{
			PlayerEvent.HitByWeapon2 += new PlayerEvent.OnWeaponHit2( InternalCallback );
		}

		public Carapace( Mobile caster, Item scroll ) : base( caster, scroll, m_Info )
		{
		}

		public override bool CheckCast()
		{
			if ( !base.CheckCast() )
				return false;

			if ( !Caster.CanBeginAction( typeof(Carapace) ))
			{
				Caster.SendLocalizedMessage( 501775 ); // This spell is already in effect
				return false;
			}

			return true;
		}

		public override void OnCast()
		{
			if ( CheckSequence() )
			{
				Caster.SendMessage( "Une Carapace de Glace couvre votre Corp" );
				Caster.BeginAction( typeof( Carapace ) );

				Caster.FixedParticles( 0x3709, 10, 30, 5052, 0x480, 0, EffectLayer.LeftFoot );
				Caster.PlaySound( 0x1a1 );
				DateTime Expire = DateTime.Now + TimeSpan.FromSeconds( Caster.Skills[SkillName.Necromancy].Value / 2 );
//				DateTime Expire = DateTime.Now + TimeSpan.FromMinutes( Caster.Skills[SkillName.Necromancy].Value / 30.0 );
				new InternalTimer( Caster, Expire ).Start();

			}
			FinishSequence();
		}

		private static void InternalCallback( Mobile attacker, Mobile defender, int damage, WeaponAbility a )
		{
			if ( !defender.CanBeginAction( typeof( Carapace ) ) && Utility.RandomBool() )
			{
				defender.DoHarmful( attacker );

				double scale = 1.0;

				scale += defender.Skills[SkillName.SpiritSpeak].Value * 0.001;

				if ( defender.Player )
				{
					scale += defender.Int * 0.001;
					scale += AosAttributes.GetValue( defender, AosAttribute.SpellDamage ) * 0.01;
				}

				


				int baseDamage = 6 + (int)(defender.Skills[SkillName.SpiritSpeak].Value / 2.0);

				double firedmg = Utility.RandomMinMax( baseDamage, baseDamage + 15 );

				firedmg *= scale;

				SpellHelper.Damage( TimeSpan.Zero, attacker, defender, firedmg, 0, 0, 100, 0, 0 );

				attacker.FixedParticles( 0x3709, 10, 30, 5052, 0x480, 0, EffectLayer.LeftFoot );
				attacker.PlaySound( 0x208 );
			}
		}

		private class InternalTimer : Timer
		{
			private Mobile Source;
			private DateTime Expire;

			
			public InternalTimer( Mobile from, DateTime end ) : base( TimeSpan.Zero, TimeSpan.FromSeconds( 0.1 ) )
			{
				Source = from;
							
				Expire = end;
				
			}

			protected override void OnTick()
			{
				if ( DateTime.Now <= Expire || !Source.CheckAlive() )
				{
				Source.FixedParticles( 14170, 1, 6, 9964, 3, 3, EffectLayer.Waist );//(0x444,1,30
				return;
				}

				if ( DateTime.Now >= Expire || !Source.CheckAlive() )
				{
					Source.EndAction( typeof( Carapace ) );
					Stop();
	
					Source.FixedParticles( 0x3709, 10, 30, 5052, 0x480, 0, EffectLayer.LeftFoot );
					Source.PlaySound( 0x1a1 );
					Source.SendMessage( "Votre Carapace Fond" );
				}
			}
		}	
	}
}
